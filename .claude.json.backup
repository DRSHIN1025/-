{
  "numStartups": 6,
  "installMethod": "global",
  "autoUpdates": true,
  "tipsHistory": {
    "ide-hotkey": 1,
    "new-user-warmup": 6,
    "plan-mode-for-complex-tasks": 6,
    "memory-command": 1,
    "theme-command": 1,
    "status-line": 1,
    "prompt-queue": 6,
    "enter-to-steer-in-relatime": 1,
    "todo-list": 1,
    "# for memory": 1,
    "install-github-app": 1,
    "drag-and-drop-images": 1,
    "double-esc": 1,
    "continue": 1,
    "shift-tab": 2,
    "image-paste": 2,
    "shift-enter": 6
  },
  "promptQueueUseCount": 1,
  "cachedStatsigGates": {
    "tengu_disable_bypass_permissions_mode": false
  },
  "userID": "3c50853aa458b7b0feb44c96cf4caab03fa38042f00effe88ac2349eca319fab",
  "fallbackAvailableWarningThreshold": 0.5,
  "projects": {
    "C:\\Users\\drshi": {
      "allowedTools": [],
      "history": [
        {
          "display": " 첨부파일 보여?",
          "pastedContents": {}
        },
        {
          "display": "유료 업그레이드 하라고 하는데",
          "pastedContents": {}
        },
        {
          "display": ".github/workflows/deploy.yml 깃허브 페이지에 이런 오류들이 자꾸 발생하는데 이부분은 어떻게 해결해야하는거지?",
          "pastedContents": {}
        },
        {
          "display": "[Pasted text #1 +58 lines] 요렇게 요청하여 만든 페이지 인데 조금더 개선하거나 보완했으면 하는점 있을까? 없으면 이대로 웹사이트에서 열릴수 있도록 해주면 좋겠어",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "Create a luxury handbag brand homepage for \"LEREVENA\" with the following specifications:\n\nDESIGN CONCEPT:\n- Ultra-premium luxury aesthetic with sophisticated minimalism\n- Color palette: Deep navy (#1a1a2e), warm gold (#d4af37), cream white (#faf9f6), charcoal text (#2d2d2d)\n- Typography: Elegant serif for headlines, clean sans-serif for body text\n- Ample white space and balanced proportions\n\nPAGE STRUCTURE:\n\n1. HERO SECTION:\n- Full-width background with subtle texture or gradient\n- Main headline: \"A Shining Value in Your Dream\"\n- Subheading: \"45년 장인의 손길로 완성한 시대를 초월한 핸드메이드 럭셔리\"\n- Elegant CTA button: \"DISCOVER LEREVENA\"\n- Minimal navigation bar with logo centered\n\n2. BRAND PHILOSOPHY (3-column section):\n- Column 1: \"장인정신\" with craftsman icon\n- Column 2: \"클래식 가치\" with timeless icon  \n- Column 3: \"합리적 럭셔리\" with value icon\n- Each with 2-3 line descriptions\n\n3. FEATURED COLLECTION:\n- Product carousel/grid with 4 luxury handbags\n- Hover effects revealing product names and prices\n- \"VIEW COLLECTION\" button\n\n4. CRAFTSMANSHIP SECTION:\n- Split layout: left side with artisan working image, right side with text\n- Headline: \"45년 경력의 명품 장인\"\n- Description of handmade process\n- \"LEARN MORE\" link\n\n5. CUSTOMER TESTIMONIALS:\n- Elegant testimonial slider\n- Customer photos with handbags\n- Refined quote styling\n\n6. FOOTER:\n- Contact information\n- Social media links\n- Newsletter signup\n- Clean, minimal design\n\nTECHNICAL REQUIREMENTS:\n- Fully responsive design\n- Smooth scrolling and transitions\n- High-quality placeholder images for luxury handbags\n- Modern, accessible UI components\n- Professional typography hierarchy\n\nBRAND PERSONALITY:\n- Sophisticated and timeless\n- Artisanal craftsmanship focus  \n- Accessible luxury positioning\n- Korean heritage with global appeal\n\nCreate a complete, polished homepage that reflects the premium nature of handcrafted luxury handbags with 45 years of master craftsmanship heritage."
            }
          }
        },
        {
          "display": "각 컬렉션의 상세보기도 필욯랄거 같은데 어떻게 하는게 좋을까? 이쁘게?",
          "pastedContents": {}
        },
        {
          "display": "일단 현재 예시로 나와 있는 사진을 기반으로 ㅁ틀을 만들어 연결해줘 이쁘게 그리고 나서 나중에 실제 정보를 줄게",
          "pastedContents": {}
        },
        {
          "display": "현재 상황에서 핸드백 라인업을 넣으려고 한다면 어떻게 구성하는게 좋을까?",
          "pastedContents": {}
        },
        {
          "display": "히어로 섹션의 discover 르레브나에 연결할 페이지를 뭘로 만들어 두는게 좋을까?",
          "pastedContents": {}
        },
        {
          "display": "카카오톡 문의 버튼 사이즈를 좀더 키워 주고 후기는 회션형으로 계속 돌아갈 수 있게해줘",
          "pastedContents": {}
        },
        {
          "display": "맞춤제작 개인화 서비스등 각 추가 옵션 섹션에 상담 신청하기는 없애주고 하단 지금 바로 전문가와 상담하세요에 카카오톡 문의 정도만 남겨줘 상담예약하기도 없애줘",
          "pastedContents": {}
        },
        {
          "display": "후기에 레레베나 라고 남아 있어 르레브나로 변경해줘",
          "pastedContents": {}
        },
        {
          "display": "모바일 최적화 해주고 레레브나 가 아니고 르레브나 야 한글로잘못적힌 부분 수정해줘  ",
          "pastedContents": {}
        },
        {
          "display": "히어로 섹션이 너무 커 좀 줄여서 적절히 비율을 맞춰줘 ",
          "pastedContents": {}
        },
        {
          "display": "http://localhost:3000/에서 작업중인게 열리지가 않아",
          "pastedContents": {}
        },
        {
          "display": "홈페이지 열릴 수 있도록 해줘\n",
          "pastedContents": {}
        },
        {
          "display": "VO에서 파일을 다운 받아서 폴더를 오픈 해볼게 그럼",
          "pastedContents": {}
        },
        {
          "display": "현재 어느정도 구조는 만들어 져 있는걸로 알고 있어 VO를 통해 기본 틀은 만들었어",
          "pastedContents": {}
        },
        {
          "display": "https://github.com/DRSHIN1025/-.git 이거 작업을 좀 하려고 해 화면에 볼 수 있게 해줄 수 있을까?",
          "pastedContents": {}
        },
        {
          "display": "[Pasted text #1 +14 lines] LEREVENA 사이트 작업 해야하는데 하다가 첨부 한거처럼 뜸",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "node:fs:2425\n    return binding.writeFileUtf8(\n                   ^\n\nError: ENOSPC: no space left on device, write\n    at Object.writeFileSync (node:fs:2425:20)\n    at Module.appendFileSync (node:fs:2507:6)\n    at Object.appendFileSync (file:///C:/Users/drshi/AppData/Roaming/npm/node_modules/@anthropic-ai/claude-code/cli.js:719:7417)\n    at uRB.appendEntry (file:///C:/Users/drshi/AppData/Roaming/npm/node_modules/@anthropic-ai/claude-code/cli.js:3561:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async uRB.insertMessageChain (file:///C:/Users/drshi/AppData/Roaming/npm/node_modules/@anthropic-ai/claude-code/cli.js:3558:9809)\n    at async kg1 (file:///C:/Users/drshi/AppData/Roaming/npm/node_modules/@anthropic-ai/claude-code/cli.js:3562:2792) {\n  errno: -4055,\n  code: 'ENOSPC',\n  syscall: 'write'"
            }
          }
        },
        {
          "display": "https://github.com/DRSHIN1025/-.git 여기가 정확한 GIT저장소이고 원래 폴더는 따로 만들지 않았고 V0롤 통해서 바로 깃허브로 저장해버렸어",
          "pastedContents": {}
        },
        {
          "display": "핸드백 LEREVENA 사이트를 만들고 있어",
          "pastedContents": {}
        },
        {
          "display": "노션 RPG 시스템이 아닌데 뭔가 혼선이 있네 그냥 폴더를 다운받아서 시작하는게 좋을까?",
          "pastedContents": {}
        },
        {
          "display": "뭔가 잘못되어 가고 있는거 같은데 노션 프로그램을 하는것이 아니라 https://github.com/DRSHIN1025/-.git 이거 진행중인 상황이야",
          "pastedContents": {}
        },
        {
          "display": "일단 홈페이지가 외부에서도 열리게 모바일에서도 열리게 해줘",
          "pastedContents": {}
        },
        {
          "display": "노션이랑은 별개 의 작업인데 노션 폴더 안에다 지금의 작업을 그대로 하면되는건지?",
          "pastedContents": {}
        },
        {
          "display": "https://github.com/DRSHIN1025/-.git 이작업을 하려고 하는데 내가 따로 폴더를 임의로 만드는게 나은걸까 깃허브 기반으로 새로운 작업 폴더를 만들어 줄 수 있는거야? 이미 만들어져 있다면 그걸 찾아서 작업하면되는건데?",
          "pastedContents": {}
        },
        {
          "display": "이폴더 말고 https://github.com/DRSHIN1025/-.git 현재 여기 작업되어 있는 파일의 폴더를 찾아서 작업하고 싶어",
          "pastedContents": {}
        },
        {
          "display": ".github/workflows/deploy.yml",
          "pastedContents": {}
        },
        {
          "display": ".github/workflows/deploy.yml& 'c:\\Users\\drshi\\OneDrive\\바탕 화면\\오류.png' 두가지 오류가 해결이 안되고 있어\n",
          "pastedContents": {}
        },
        {
          "display": "Error: Process completed with exit code 1.\n 이오류도 있어",
          "pastedContents": {}
        },
        {
          "display": ".github/workflows/deploy.yml 요기도 오류가 많이 보이고 있어",
          "pastedContents": {}
        },
        {
          "display": "build-and-deploy\nAction failed with \"The process '/usr/bin/git' failed with exit code 128\" 도대체 뭐가 문제 인걸까?",
          "pastedContents": {}
        },
        {
          "display": "  Error: Action failed with \"The process '/usr/bin/git' failed with exit code 128\"",
          "pastedContents": {}
        },
        {
          "display": "build-and-deploy\nfailed 2 minutes ago in 9s\nSearch logs\n2s\n1s\n3s\nRun actions/setup-node@v4\nFound in cache @ /opt/hostedtoolcache/node/18.20.8/x64\nEnvironment details\n/opt/hostedtoolcache/node/18.20.8/x64/bin/npm config get cache\n/home/runner/.npm\nError: Dependencies lock file is not found in /home/runner/work/-/-. Supported file patterns: package-lock.json,npm-shrinkwrap.json,yarn.lock\n0s\n0s\n0s\n0s\n0s\n0s",
          "pastedContents": {}
        },
        {
          "display": "Triggered via push 2 minutes ago\n@DRSHIN1025DRSHIN1025\npushed\n 3036eed\nmaster\nStatus\nFailure\nTotal duration\n12s\nArtifacts\n–\n\n\nAnnotations\n1 error\nbuild-and-deploy\nDependencies lock file is not found in /home/runner/work/-/-. Supported file patterns: package-lock.json,npm-shrinkwrap.json,yarn.lock",
          "pastedContents": {}
        },
        {
          "display": "헤드아래 하이라이트 영역이 너무 폭이 커서 좀 줄였으면 좋겠고 레레브나 가 아니라 한국어로 르레브나 라고 부르면 되겠어",
          "pastedContents": {}
        },
        {
          "display": "온라인 확인은 404가 뜬다 그리고 클로드 EXTENTION VS CODE 설치했는데 저렇게 깔아만 두면 되는건가?",
          "pastedContents": {}
        }
      ],
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": true,
      "projectOnboardingSeenCount": 4,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "lastTotalWebSearchRequests": 0
    }
  },
  "firstStartTime": "2025-09-23T10:20:36.290Z",
  "oauthAccount": {
    "accountUuid": "26f958ff-008f-4965-948c-f845a70b7500",
    "emailAddress": "drshin1025@gmail.com",
    "organizationUuid": "5c9346a1-41dc-4eb5-b50d-ad5ad06e8bf3",
    "organizationRole": "admin",
    "workspaceRole": null,
    "organizationName": "drshin1025@gmail.com's Organization"
  },
  "claudeCodeFirstTokenDate": "2025-08-21T17:59:00.987614Z",
  "shiftEnterKeyBindingInstalled": true,
  "hasCompletedOnboarding": true,
  "lastOnboardingVersion": "1.0.120",
  "s1mAccessCache": {
    "5c9346a1-41dc-4eb5-b50d-ad5ad06e8bf3": {
      "hasAccess": false,
      "hasAccessNotAsDefault": false,
      "timestamp": 1758694240379
    }
  },
  "hasOpusPlanDefault": false,
  "isQualifiedForDataSharing": false,
  "subscriptionNoticeCount": 0,
  "hasAvailableSubscription": false,
  "cachedChangelog": "# Changelog\n\n## 1.0.123\n\n- Bash permission rules now support output redirections when matching (e.g., `Bash(python:*)` matches `python script.py > output.txt`)\n- Fixed thinking mode triggering on negation phrases like \"don't think\"\n- Fixed rendering performance degradation during token streaming\n- Added SlashCommand tool, which enables Claude to invoke your slash commands. https://docs.claude.com/en/docs/claude-code/slash-commands#SlashCommand-tool\n- Enhanced BashTool environment snapshot logging\n- Fixed a bug where resuming a conversation in headless mode would sometimes enable thinking unnecessarily\n- Migrated --debug logging to a file, to enable easy tailing & filtering\n\n## 1.0.120\n\n- Fix input lag during typing, especially noticeable with large prompts\n- Improved VSCode extension command registry and sessions dialog user experience\n- Enhanced sessions dialog responsiveness and visual feedback\n- Fixed IDE compatibility issue by removing worktree support check\n- Fixed security vulnerability where Bash tool permission checks could be bypassed using prefix matching\n\n## 1.0.119\n\n- Fix Windows issue where process visually freezes on entering interactive mode\n- Support dynamic headers for MCP servers via headersHelper configuration\n- Fix thinking mode not working in headless sessions\n- Fix slash commands now properly update allowed tools instead of replacing them\n\n## 1.0.117\n\n- Add Ctrl-R history search to recall previous commands like bash/zsh\n- Fix input lag while typing, especially on Windows\n- Add sed command to auto-allowed commands in acceptEdits mode\n- Fix Windows PATH comparison to be case-insensitive for drive letters\n- Add permissions management hint to /add-dir output\n\n## 1.0.115\n\n- Improve thinking mode display with enhanced visual effects\n- Type /t to temporarily disable thinking mode in your prompt\n- Improve path validation for glob and grep tools\n- Show condensed output for post-tool hooks to reduce visual clutter\n- Fix visual feedback when loading state completes\n- Improve UI consistency for permission request dialogs\n\n## 1.0.113\n\n- Deprecated piped input in interactive mode\n- Move Ctrl+R keybinding for toggling transcript to Ctrl+O\n\n## 1.0.112\n\n- Transcript mode (Ctrl+R): Added the model used to generate each assistant message\n- Addressed issue where some Claude Max users were incorrectly recognized as Claude Pro users\n- Hooks: Added systemMessage support for SessionEnd hooks\n- Added `spinnerTipsEnabled` setting to disable spinner tips\n- IDE: Various improvements and bug fixes\n\n## 1.0.111\n\n- /model now validates provided model names\n- Fixed Bash tool crashes caused by malformed shell syntax parsing\n\n## 1.0.110\n\n- /terminal-setup command now supports WezTerm\n- MCP: OAuth tokens now proactively refresh before expiration\n- Fixed reliability issues with background Bash processes\n\n## 1.0.109\n\n- SDK: Added partial message streaming support via `--include-partial-messages` CLI flag\n\n## 1.0.106\n\n- Windows: Fixed path permission matching to consistently use POSIX format (e.g., `Read(//c/Users/...)`)\n\n## 1.0.97\n\n- Settings: /doctor now validates permission rule syntax and suggests corrections\n\n## 1.0.94\n\n- Vertex: add support for global endpoints for supported models\n- /memory command now allows direct editing of all imported memory files\n- SDK: Add custom tools as callbacks\n- Added /todos command to list current todo items\n\n## 1.0.93\n\n- Windows: Add alt + v shortcut for pasting images from clipboard\n- Support NO_PROXY environment variable to bypass proxy for specified hostnames and IPs\n\n## 1.0.90\n\n- Settings file changes take effect immediately - no restart required\n\n## 1.0.88\n\n- Fixed issue causing \"OAuth authentication is currently not supported\"\n- Status line input now includes `exceeds_200k_tokens`\n- Fixed incorrect usage tracking in /cost.\n- Introduced `ANTHROPIC_DEFAULT_SONNET_MODEL` and `ANTHROPIC_DEFAULT_OPUS_MODEL` for controlling model aliases opusplan, opus, and sonnet.\n- Bedrock: Updated default Sonnet model to Sonnet 4\n\n## 1.0.86\n\n- Added /context to help users self-serve debug context issues\n- SDK: Added UUID support for all SDK messages\n- SDK: Added `--replay-user-messages` to replay user messages back to stdout\n\n## 1.0.85\n\n- Status line input now includes session cost info\n- Hooks: Introduced SessionEnd hook\n\n## 1.0.84\n\n- Fix tool_use/tool_result id mismatch error when network is unstable\n- Fix Claude sometimes ignoring real-time steering when wrapping up a task\n- @-mention: Add ~/.claude/\\* files to suggestions for easier agent, output style, and slash command editing\n- Use built-in ripgrep by default; to opt out of this behavior, set USE_BUILTIN_RIPGREP=0\n\n## 1.0.83\n\n- @-mention: Support files with spaces in path\n- New shimmering spinner\n\n## 1.0.82\n\n- SDK: Add request cancellation support\n- SDK: New additionalDirectories option to search custom paths, improved slash command processing\n- Settings: Validation prevents invalid fields in .claude/settings.json files\n- MCP: Improve tool name consistency\n- Bash: Fix crash when Claude tries to automatically read large files\n\n## 1.0.81\n\n- Released output styles, including new built-in educational output styles \"Explanatory\" and \"Learning\". Docs: https://docs.claude.com/en/docs/claude-code/output-styles\n- Agents: Fix custom agent loading when agent files are unparsable\n\n## 1.0.80\n\n- UI improvements: Fix text contrast for custom subagent colors and spinner rendering issues\n\n## 1.0.77\n\n- Bash tool: Fix heredoc and multiline string escaping, improve stderr redirection handling\n- SDK: Add session support and permission denial tracking\n- Fix token limit errors in conversation summarization\n- Opus Plan Mode: New setting in `/model` to run Opus only in plan mode, Sonnet otherwise\n\n## 1.0.73\n\n- MCP: Support multiple config files with `--mcp-config file1.json file2.json`\n- MCP: Press Esc to cancel OAuth authentication flows\n- Bash: Improved command validation and reduced false security warnings\n- UI: Enhanced spinner animations and status line visual hierarchy\n- Linux: Added support for Alpine and musl-based distributions (requires separate ripgrep installation)\n\n## 1.0.72\n\n- Ask permissions: have Claude Code always ask for confirmation to use specific tools with /permissions\n\n## 1.0.71\n\n- Background commands: (Ctrl-b) to run any Bash command in the background so Claude can keep working (great for dev servers, tailing logs, etc.)\n- Customizable status line: add your terminal prompt to Claude Code with /statusline\n\n## 1.0.70\n\n- Performance: Optimized message rendering for better performance with large contexts\n- Windows: Fixed native file search, ripgrep, and subagent functionality\n- Added support for @-mentions in slash command arguments\n\n## 1.0.69\n\n- Upgraded Opus to version 4.1\n\n## 1.0.68\n\n- Fix incorrect model names being used for certain commands like `/pr-comments`\n- Windows: improve permissions checks for allow / deny tools and project trust. This may create a new project entry in `.claude.json` - manually merge the history field if desired.\n- Windows: improve sub-process spawning to eliminate \"No such file or directory\" when running commands like pnpm\n- Enhanced /doctor command with CLAUDE.md and MCP tool context for self-serve debugging\n- SDK: Added canUseTool callback support for tool confirmation\n- Added `disableAllHooks` setting\n- Improved file suggestions performance in large repos\n\n## 1.0.65\n\n- IDE: Fixed connection stability issues and error handling for diagnostics\n- Windows: Fixed shell environment setup for users without .bashrc files\n\n## 1.0.64\n\n- Agents: Added model customization support - you can now specify which model an agent should use\n- Agents: Fixed unintended access to the recursive agent tool\n- Hooks: Added systemMessage field to hook JSON output for displaying warnings and context\n- SDK: Fixed user input tracking across multi-turn conversations\n- Added hidden files to file search and @-mention suggestions\n\n## 1.0.63\n\n- Windows: Fixed file search, @agent mentions, and custom slash commands functionality\n\n## 1.0.62\n\n- Added @-mention support with typeahead for custom agents. @<your-custom-agent> to invoke it\n- Hooks: Added SessionStart hook for new session initialization\n- /add-dir command now supports typeahead for directory paths\n- Improved network connectivity check reliability\n\n## 1.0.61\n\n- Transcript mode (Ctrl+R): Changed Esc to exit transcript mode rather than interrupt\n- Settings: Added `--settings` flag to load settings from a JSON file\n- Settings: Fixed resolution of settings files paths that are symlinks\n- OTEL: Fixed reporting of wrong organization after authentication changes\n- Slash commands: Fixed permissions checking for allowed-tools with Bash\n- IDE: Added support for pasting images in VSCode MacOS using ⌘+V\n- IDE: Added `CLAUDE_CODE_AUTO_CONNECT_IDE=false` for disabling IDE auto-connection\n- Added `CLAUDE_CODE_SHELL_PREFIX` for wrapping Claude and user-provided shell commands run by Claude Code\n\n## 1.0.60\n\n- You can now create custom subagents for specialized tasks! Run /agents to get started\n\n## 1.0.59\n\n- SDK: Added tool confirmation support with canUseTool callback\n- SDK: Allow specifying env for spawned process\n- Hooks: Exposed PermissionDecision to hooks (including \"ask\")\n- Hooks: UserPromptSubmit now supports additionalContext in advanced JSON output\n- Fixed issue where some Max users that specified Opus would still see fallback to Sonnet\n\n## 1.0.58\n\n- Added support for reading PDFs\n- MCP: Improved server health status display in 'claude mcp list'\n- Hooks: Added CLAUDE_PROJECT_DIR env var for hook commands\n\n## 1.0.57\n\n- Added support for specifying a model in slash commands\n- Improved permission messages to help Claude understand allowed tools\n- Fix: Remove trailing newlines from bash output in terminal wrapping\n\n## 1.0.56\n\n- Windows: Enabled shift+tab for mode switching on versions of Node.js that support terminal VT mode\n- Fixes for WSL IDE detection\n- Fix an issue causing awsRefreshHelper changes to .aws directory not to be picked up\n\n## 1.0.55\n\n- Clarified knowledge cutoff for Opus 4 and Sonnet 4 models\n- Windows: fixed Ctrl+Z crash\n- SDK: Added ability to capture error logging\n- Add --system-prompt-file option to override system prompt in print mode\n\n## 1.0.54\n\n- Hooks: Added UserPromptSubmit hook and the current working directory to hook inputs\n- Custom slash commands: Added argument-hint to frontmatter\n- Windows: OAuth uses port 45454 and properly constructs browser URL\n- Windows: mode switching now uses alt + m, and plan mode renders properly\n- Shell: Switch to in-memory shell snapshot to fix file-related errors\n\n## 1.0.53\n\n- Updated @-mention file truncation from 100 lines to 2000 lines\n- Add helper script settings for AWS token refresh: awsAuthRefresh (for foreground operations like aws sso login) and awsCredentialExport (for background operation with STS-like response).\n\n## 1.0.52\n\n- Added support for MCP server instructions\n\n## 1.0.51\n\n- Added support for native Windows (requires Git for Windows)\n- Added support for Bedrock API keys through environment variable AWS_BEARER_TOKEN_BEDROCK\n- Settings: /doctor can now help you identify and fix invalid setting files\n- `--append-system-prompt` can now be used in interactive mode, not just --print/-p.\n- Increased auto-compact warning threshold from 60% to 80%\n- Fixed an issue with handling user directories with spaces for shell snapshots\n- OTEL resource now includes os.type, os.version, host.arch, and wsl.version (if running on Windows Subsystem for Linux)\n- Custom slash commands: Fixed user-level commands in subdirectories\n- Plan mode: Fixed issue where rejected plan from sub-task would get discarded\n\n## 1.0.48\n\n- Fixed a bug in v1.0.45 where the app would sometimes freeze on launch\n- Added progress messages to Bash tool based on the last 5 lines of command output\n- Added expanding variables support for MCP server configuration\n- Moved shell snapshots from /tmp to ~/.claude for more reliable Bash tool calls\n- Improved IDE extension path handling when Claude Code runs in WSL\n- Hooks: Added a PreCompact hook\n- Vim mode: Added c, f/F, t/T\n\n## 1.0.45\n\n- Redesigned Search (Grep) tool with new tool input parameters and features\n- Disabled IDE diffs for notebook files, fixing \"Timeout waiting after 1000ms\" error\n- Fixed config file corruption issue by enforcing atomic writes\n- Updated prompt input undo to Ctrl+\\_ to avoid breaking existing Ctrl+U behavior, matching zsh's undo shortcut\n- Stop Hooks: Fixed transcript path after /clear and fixed triggering when loop ends with tool call\n- Custom slash commands: Restored namespacing in command names based on subdirectories. For example, .claude/commands/frontend/component.md is now /frontend:component, not /component.\n\n## 1.0.44\n\n- New /export command lets you quickly export a conversation for sharing\n- MCP: resource_link tool results are now supported\n- MCP: tool annotations and tool titles now display in /mcp view\n- Changed Ctrl+Z to suspend Claude Code. Resume by running `fg`. Prompt input undo is now Ctrl+U.\n\n## 1.0.43\n\n- Fixed a bug where the theme selector was saving excessively\n- Hooks: Added EPIPE system error handling\n\n## 1.0.42\n\n- Added tilde (`~`) expansion support to `/add-dir` command\n\n## 1.0.41\n\n- Hooks: Split Stop hook triggering into Stop and SubagentStop\n- Hooks: Enabled optional timeout configuration for each command\n- Hooks: Added \"hook_event_name\" to hook input\n- Fixed a bug where MCP tools would display twice in tool list\n- New tool parameters JSON for Bash tool in `tool_decision` event\n\n## 1.0.40\n\n- Fixed a bug causing API connection errors with UNABLE_TO_GET_ISSUER_CERT_LOCALLY if `NODE_EXTRA_CA_CERTS` was set\n\n## 1.0.39\n\n- New Active Time metric in OpenTelemetry logging\n\n## 1.0.38\n\n- Released hooks. Special thanks to community input in https://github.com/anthropics/claude-code/issues/712. Docs: https://docs.claude.com/en/docs/claude-code/hooks\n\n## 1.0.37\n\n- Remove ability to set `Proxy-Authorization` header via ANTHROPIC_AUTH_TOKEN or apiKeyHelper\n\n## 1.0.36\n\n- Web search now takes today's date into context\n- Fixed a bug where stdio MCP servers were not terminating properly on exit\n\n## 1.0.35\n\n- Added support for MCP OAuth Authorization Server discovery\n\n## 1.0.34\n\n- Fixed a memory leak causing a MaxListenersExceededWarning message to appear\n\n## 1.0.33\n\n- Improved logging functionality with session ID support\n- Added prompt input undo functionality (Ctrl+Z and vim 'u' command)\n- Improvements to plan mode\n\n## 1.0.32\n\n- Updated loopback config for litellm\n- Added forceLoginMethod setting to bypass login selection screen\n\n## 1.0.31\n\n- Fixed a bug where ~/.claude.json would get reset when file contained invalid JSON\n\n## 1.0.30\n\n- Custom slash commands: Run bash output, @-mention files, enable thinking with thinking keywords\n- Improved file path autocomplete with filename matching\n- Added timestamps in Ctrl-r mode and fixed Ctrl-c handling\n- Enhanced jq regex support for complex filters with pipes and select\n\n## 1.0.29\n\n- Improved CJK character support in cursor navigation and rendering\n\n## 1.0.28\n\n- Slash commands: Fix selector display during history navigation\n- Resizes images before upload to prevent API size limit errors\n- Added XDG_CONFIG_HOME support to configuration directory\n- Performance optimizations for memory usage\n- New attributes (terminal.type, language) in OpenTelemetry logging\n\n## 1.0.27\n\n- Streamable HTTP MCP servers are now supported\n- Remote MCP servers (SSE and HTTP) now support OAuth\n- MCP resources can now be @-mentioned\n- /resume slash command to switch conversations within Claude Code\n\n## 1.0.25\n\n- Slash commands: moved \"project\" and \"user\" prefixes to descriptions\n- Slash commands: improved reliability for command discovery\n- Improved support for Ghostty\n- Improved web search reliability\n\n## 1.0.24\n\n- Improved /mcp output\n- Fixed a bug where settings arrays got overwritten instead of merged\n\n## 1.0.23\n\n- Released TypeScript SDK: import @anthropic-ai/claude-code to get started\n- Released Python SDK: pip install claude-code-sdk to get started\n\n## 1.0.22\n\n- SDK: Renamed `total_cost` to `total_cost_usd`\n\n## 1.0.21\n\n- Improved editing of files with tab-based indentation\n- Fix for tool_use without matching tool_result errors\n- Fixed a bug where stdio MCP server processes would linger after quitting Claude Code\n\n## 1.0.18\n\n- Added --add-dir CLI argument for specifying additional working directories\n- Added streaming input support without require -p flag\n- Improved startup performance and session storage performance\n- Added CLAUDE_BASH_MAINTAIN_PROJECT_WORKING_DIR environment variable to freeze working directory for bash commands\n- Added detailed MCP server tools display (/mcp)\n- MCP authentication and permission improvements\n- Added auto-reconnection for MCP SSE connections on disconnect\n- Fixed issue where pasted content was lost when dialogs appeared\n\n## 1.0.17\n\n- We now emit messages from sub-tasks in -p mode (look for the parent_tool_use_id property)\n- Fixed crashes when the VS Code diff tool is invoked multiple times quickly\n- MCP server list UI improvements\n- Update Claude Code process title to display \"claude\" instead of \"node\"\n\n## 1.0.11\n\n- Claude Code can now also be used with a Claude Pro subscription\n- Added /upgrade for smoother switching to Claude Max plans\n- Improved UI for authentication from API keys and Bedrock/Vertex/external auth tokens\n- Improved shell configuration error handling\n- Improved todo list handling during compaction\n\n## 1.0.10\n\n- Added markdown table support\n- Improved streaming performance\n\n## 1.0.8\n\n- Fixed Vertex AI region fallback when using CLOUD_ML_REGION\n- Increased default otel interval from 1s -> 5s\n- Fixed edge cases where MCP_TIMEOUT and MCP_TOOL_TIMEOUT weren't being respected\n- Fixed a regression where search tools unnecessarily asked for permissions\n- Added support for triggering thinking non-English languages\n- Improved compacting UI\n\n## 1.0.7\n\n- Renamed /allowed-tools -> /permissions\n- Migrated allowedTools and ignorePatterns from .claude.json -> settings.json\n- Deprecated claude config commands in favor of editing settings.json\n- Fixed a bug where --dangerously-skip-permissions sometimes didn't work in --print mode\n- Improved error handling for /install-github-app\n- Bugfixes, UI polish, and tool reliability improvements\n\n## 1.0.6\n\n- Improved edit reliability for tab-indented files\n- Respect CLAUDE_CONFIG_DIR everywhere\n- Reduced unnecessary tool permission prompts\n- Added support for symlinks in @file typeahead\n- Bugfixes, UI polish, and tool reliability improvements\n\n## 1.0.4\n\n- Fixed a bug where MCP tool errors weren't being parsed correctly\n\n## 1.0.1\n\n- Added `DISABLE_INTERLEAVED_THINKING` to give users the option to opt out of interleaved thinking.\n- Improved model references to show provider-specific names (Sonnet 3.7 for Bedrock, Sonnet 4 for Console)\n- Updated documentation links and OAuth process descriptions\n\n## 1.0.0\n\n- Claude Code is now generally available\n- Introducing Sonnet 4 and Opus 4 models\n\n## 0.2.125\n\n- Breaking change: Bedrock ARN passed to `ANTHROPIC_MODEL` or `ANTHROPIC_SMALL_FAST_MODEL` should no longer contain an escaped slash (specify `/` instead of `%2F`)\n- Removed `DEBUG=true` in favor of `ANTHROPIC_LOG=debug`, to log all requests\n\n## 0.2.117\n\n- Breaking change: --print JSON output now returns nested message objects, for forwards-compatibility as we introduce new metadata fields\n- Introduced settings.cleanupPeriodDays\n- Introduced CLAUDE_CODE_API_KEY_HELPER_TTL_MS env var\n- Introduced --debug mode\n\n## 0.2.108\n\n- You can now send messages to Claude while it works to steer Claude in real-time\n- Introduced BASH_DEFAULT_TIMEOUT_MS and BASH_MAX_TIMEOUT_MS env vars\n- Fixed a bug where thinking was not working in -p mode\n- Fixed a regression in /cost reporting\n- Deprecated MCP wizard interface in favor of other MCP commands\n- Lots of other bugfixes and improvements\n\n## 0.2.107\n\n- CLAUDE.md files can now import other files. Add @path/to/file.md to ./CLAUDE.md to load additional files on launch\n\n## 0.2.106\n\n- MCP SSE server configs can now specify custom headers\n- Fixed a bug where MCP permission prompt didn't always show correctly\n\n## 0.2.105\n\n- Claude can now search the web\n- Moved system & account status to /status\n- Added word movement keybindings for Vim\n- Improved latency for startup, todo tool, and file edits\n\n## 0.2.102\n\n- Improved thinking triggering reliability\n- Improved @mention reliability for images and folders\n- You can now paste multiple large chunks into one prompt\n\n## 0.2.100\n\n- Fixed a crash caused by a stack overflow error\n- Made db storage optional; missing db support disables --continue and --resume\n\n## 0.2.98\n\n- Fixed an issue where auto-compact was running twice\n\n## 0.2.96\n\n- Claude Code can now also be used with a Claude Max subscription (https://claude.ai/upgrade)\n\n## 0.2.93\n\n- Resume conversations from where you left off from with \"claude --continue\" and \"claude --resume\"\n- Claude now has access to a Todo list that helps it stay on track and be more organized\n\n## 0.2.82\n\n- Added support for --disallowedTools\n- Renamed tools for consistency: LSTool -> LS, View -> Read, etc.\n\n## 0.2.75\n\n- Hit Enter to queue up additional messages while Claude is working\n- Drag in or copy/paste image files directly into the prompt\n- @-mention files to directly add them to context\n- Run one-off MCP servers with `claude --mcp-config <path-to-file>`\n- Improved performance for filename auto-complete\n\n## 0.2.74\n\n- Added support for refreshing dynamically generated API keys (via apiKeyHelper), with a 5 minute TTL\n- Task tool can now perform writes and run bash commands\n\n## 0.2.72\n\n- Updated spinner to indicate tokens loaded and tool usage\n\n## 0.2.70\n\n- Network commands like curl are now available for Claude to use\n- Claude can now run multiple web queries in parallel\n- Pressing ESC once immediately interrupts Claude in Auto-accept mode\n\n## 0.2.69\n\n- Fixed UI glitches with improved Select component behavior\n- Enhanced terminal output display with better text truncation logic\n\n## 0.2.67\n\n- Shared project permission rules can be saved in .claude/settings.json\n\n## 0.2.66\n\n- Print mode (-p) now supports streaming output via --output-format=stream-json\n- Fixed issue where pasting could trigger memory or bash mode unexpectedly\n\n## 0.2.63\n\n- Fixed an issue where MCP tools were loaded twice, which caused tool call errors\n\n## 0.2.61\n\n- Navigate menus with vim-style keys (j/k) or bash/emacs shortcuts (Ctrl+n/p) for faster interaction\n- Enhanced image detection for more reliable clipboard paste functionality\n- Fixed an issue where ESC key could crash the conversation history selector\n\n## 0.2.59\n\n- Copy+paste images directly into your prompt\n- Improved progress indicators for bash and fetch tools\n- Bugfixes for non-interactive mode (-p)\n\n## 0.2.54\n\n- Quickly add to Memory by starting your message with '#'\n- Press ctrl+r to see full output for long tool results\n- Added support for MCP SSE transport\n\n## 0.2.53\n\n- New web fetch tool lets Claude view URLs that you paste in\n- Fixed a bug with JPEG detection\n\n## 0.2.50\n\n- New MCP \"project\" scope now allows you to add MCP servers to .mcp.json files and commit them to your repository\n\n## 0.2.49\n\n- Previous MCP server scopes have been renamed: previous \"project\" scope is now \"local\" and \"global\" scope is now \"user\"\n\n## 0.2.47\n\n- Press Tab to auto-complete file and folder names\n- Press Shift + Tab to toggle auto-accept for file edits\n- Automatic conversation compaction for infinite conversation length (toggle with /config)\n\n## 0.2.44\n\n- Ask Claude to make a plan with thinking mode: just say 'think' or 'think harder' or even 'ultrathink'\n\n## 0.2.41\n\n- MCP server startup timeout can now be configured via MCP_TIMEOUT environment variable\n- MCP server startup no longer blocks the app from starting up\n\n## 0.2.37\n\n- New /release-notes command lets you view release notes at any time\n- `claude config add/remove` commands now accept multiple values separated by commas or spaces\n\n## 0.2.36\n\n- Import MCP servers from Claude Desktop with `claude mcp add-from-claude-desktop`\n- Add MCP servers as JSON strings with `claude mcp add-json <n> <json>`\n\n## 0.2.34\n\n- Vim bindings for text input - enable with /vim or /config\n\n## 0.2.32\n\n- Interactive MCP setup wizard: Run \"claude mcp add\" to add MCP servers with a step-by-step interface\n- Fix for some PersistentShell issues\n\n## 0.2.31\n\n- Custom slash commands: Markdown files in .claude/commands/ directories now appear as custom slash commands to insert prompts into your conversation\n- MCP debug mode: Run with --mcp-debug flag to get more information about MCP server errors\n\n## 0.2.30\n\n- Added ANSI color theme for better terminal compatibility\n- Fixed issue where slash command arguments weren't being sent properly\n- (Mac-only) API keys are now stored in macOS Keychain\n\n## 0.2.26\n\n- New /approved-tools command for managing tool permissions\n- Word-level diff display for improved code readability\n- Fuzzy matching for slash commands\n\n## 0.2.21\n\n- Fuzzy matching for /commands\n",
  "changelogLastFetched": 1758695574534,
  "lastReleaseNotesSeen": "1.0.123"
}